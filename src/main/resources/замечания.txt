Ответы по тексту.

"Далее в spring есть специальные инструменты для передачи properties.Как это использовать можно почитать
 https://www.baeldung.com/spring-value-annotation"

 Использовал аннотацию @ConfigurationProperties для передачи данных из application.yml
 - https://www.baeldung.com/configuration-properties-in-spring-boot.
 Все передаваемые значения относятся к настройкам kafka и соответственны объединены общим префиксом kafka,
 что очень удобно и делает код лаконичным. Непронятно какая выгода тут от использования аннотации @Value, учитывая,
 что придётся "обвешивать" ей каждое поле класса.
 Не планирую исправлять.

 "Если требуется сгенерировать сообщение - можно просто случайно выбирая слова из некого набора через проблем сформировать их."

 Поправил.
 ИМХО - вариантов сделать это великое множество, выбрал тот, который наиболее наглядно продемонстрирует, что
 фильтрация успешно отрабатывает на тестовых данных. Полагаясь на рандом это отследить сложнее.
 В задании не описано каким образом нужно генерировать сообщения - соответственно разработчик выбирает сам.

 "Также для blocked users не использовать хардкод, а сделать это гибко через структуру данных."

 Тут требуется пояснение. В задании указано следующее, цитирую:
 "Для каждого пользователя создайте отдельный список заблокированных пользователей. Список должен храниться на диске."
 В моём случае список как раз хранится на диске - файл blocked_user1.txt в ресурсах, я читаю из него данные и использую
 их для фильтрации заблокированных пользователей - кажется всё корректно.
 Во второй подзадачи указано:
 "Создайте список запрещённых слов, который можно динамически обновлять."
 Тут для списка запрещённых слов я как раз использую топик, т.к. должна быть возможность динамически дополнить этот список.
 Готов поправить, но непонятно что именно править, просьба скорректировать условие задания для исключения двусмысленности.

 "Топики также через spring-value-annotation вынести в конфигурацию."

 Поправил, но только через ConfigurationProperties.

 "Количество отправляемых сообщений - можно также сделать через Random до максимум какого-то 10-20 целого как вариант."

 Поправил.

"StreamConfiguration - также можно вынести в отдельную конфигурацию.
 KafkaProperites класс совсем будет не нужен если использовать @value-annotation"

 У меня уже есть класс KafkaStreamProperties, зачем нужен StreamConfiguration непонятно.
 По поводу аннотации value ответил в первом пункте.
 Не планирую исправлять.

 "Что улучшить.
  Также в логи лучше не писать ничего на русском языке - обычно это принято делать на английском."

 Извините, но тут у меня встречный вопрос - принято где? Я работаю в компании, которая на рынке более 20 лет и там
 принято логи писать на русском, потому что так удобней отделу сопровождения. Опять же, если на этот счёт есть какие-то
 требования/правила - это должно быть описано в задании. К слову во всех уроках Яндекс Практикум вывод в консоль написан
 на русском языке.
 Не планирую исправлять.